{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { useContext } from 'react';\nimport { ShowContext } from './ShowContext';\nexport var useShowContext = function (props) {\n  // Can't find a way to specify the RecordType when CreateContext is declared\n  // @ts-ignore\n  var context = useContext(ShowContext);\n\n  if (!context.resource) {\n    /**\n     * The element isn't inside a <ShowContext.Provider>\n     * To avoid breakage in that case, fallback to props\n     *\n     * @deprecated - to be removed in 4.0\n     */\n    if (process.env.NODE_ENV !== 'production') {\n      console.log(\"Show components must be used inside a <ShowContext.Provider>. Relying on props rather than context to get Show data and callbacks is deprecated and won't be supported in the next major version of react-admin.\");\n    } // Necessary for actions (EditActions) which expect a data prop containing the record\n    // @deprecated - to be removed in 4.0d\n\n\n    return __assign(__assign({}, props), {\n      record: props.record || props.data,\n      data: props.record || props.data\n    });\n  }\n\n  return context;\n};","map":{"version":3,"sources":["C:/Users/Admin/Desktop/TTNM/admin3/node_modules/ra-core/esm/controller/details/useShowContext.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","useContext","ShowContext","useShowContext","props","context","resource","process","env","NODE_ENV","console","log","record","data"],"mappings":"AAAA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,SAASO,UAAT,QAA2B,OAA3B;AACA,SAASC,WAAT,QAA4B,eAA5B;AACA,OAAO,IAAIC,cAAc,GAAG,UAAUC,KAAV,EAAiB;AACzC;AACA;AACA,MAAIC,OAAO,GAAGJ,UAAU,CAACC,WAAD,CAAxB;;AACA,MAAI,CAACG,OAAO,CAACC,QAAb,EAAuB;AACnB;AACR;AACA;AACA;AACA;AACA;AACQ,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;AACvCC,MAAAA,OAAO,CAACC,GAAR,CAAY,kNAAZ;AACH,KATkB,CAUnB;AACA;;;AACA,WAAOxB,QAAQ,CAACA,QAAQ,CAAC,EAAD,EAAKiB,KAAL,CAAT,EAAsB;AAAEQ,MAAAA,MAAM,EAAER,KAAK,CAACQ,MAAN,IAAgBR,KAAK,CAACS,IAAhC;AAAsCA,MAAAA,IAAI,EAAET,KAAK,CAACQ,MAAN,IAAgBR,KAAK,CAACS;AAAlE,KAAtB,CAAf;AACH;;AACD,SAAOR,OAAP;AACH,CAnBM","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { useContext } from 'react';\nimport { ShowContext } from './ShowContext';\nexport var useShowContext = function (props) {\n    // Can't find a way to specify the RecordType when CreateContext is declared\n    // @ts-ignore\n    var context = useContext(ShowContext);\n    if (!context.resource) {\n        /**\n         * The element isn't inside a <ShowContext.Provider>\n         * To avoid breakage in that case, fallback to props\n         *\n         * @deprecated - to be removed in 4.0\n         */\n        if (process.env.NODE_ENV !== 'production') {\n            console.log(\"Show components must be used inside a <ShowContext.Provider>. Relying on props rather than context to get Show data and callbacks is deprecated and won't be supported in the next major version of react-admin.\");\n        }\n        // Necessary for actions (EditActions) which expect a data prop containing the record\n        // @deprecated - to be removed in 4.0d\n        return __assign(__assign({}, props), { record: props.record || props.data, data: props.record || props.data });\n    }\n    return context;\n};\n"]},"metadata":{},"sourceType":"module"}