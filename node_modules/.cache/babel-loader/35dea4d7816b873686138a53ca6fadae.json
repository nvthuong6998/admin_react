{"ast":null,"code":"var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useInput, FieldTitle, useTranslate, useChoices, warning } from 'ra-core';\nimport ResettableTextField from './ResettableTextField';\nimport InputHelperText from './InputHelperText';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\n\nvar sanitizeRestProps = function (_a) {\n  var addLabel = _a.addLabel,\n      afterSubmit = _a.afterSubmit,\n      allowNull = _a.allowNull,\n      beforeSubmit = _a.beforeSubmit,\n      choices = _a.choices,\n      className = _a.className,\n      crudGetMatching = _a.crudGetMatching,\n      crudGetOne = _a.crudGetOne,\n      data = _a.data,\n      filter = _a.filter,\n      filterToQuery = _a.filterToQuery,\n      formatOnBlur = _a.formatOnBlur,\n      isEqual = _a.isEqual,\n      limitChoicesToValue = _a.limitChoicesToValue,\n      multiple = _a.multiple,\n      name = _a.name,\n      pagination = _a.pagination,\n      perPage = _a.perPage,\n      ref = _a.ref,\n      reference = _a.reference,\n      render = _a.render,\n      setFilter = _a.setFilter,\n      setPagination = _a.setPagination,\n      setSort = _a.setSort,\n      sort = _a.sort,\n      subscription = _a.subscription,\n      type = _a.type,\n      validateFields = _a.validateFields,\n      validation = _a.validation,\n      value = _a.value,\n      rest = __rest(_a, [\"addLabel\", \"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"choices\", \"className\", \"crudGetMatching\", \"crudGetOne\", \"data\", \"filter\", \"filterToQuery\", \"formatOnBlur\", \"isEqual\", \"limitChoicesToValue\", \"multiple\", \"name\", \"pagination\", \"perPage\", \"ref\", \"reference\", \"render\", \"setFilter\", \"setPagination\", \"setSort\", \"sort\", \"subscription\", \"type\", \"validateFields\", \"validation\", \"value\"]);\n\n  return sanitizeInputRestProps(rest);\n};\n\nvar useStyles = makeStyles(function (theme) {\n  return {\n    input: {\n      minWidth: theme.spacing(20)\n    }\n  };\n}, {\n  name: 'RaSelectInput'\n});\n/**\n * An Input component for a select box, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <SelectInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <SelectInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <SelectInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <SelectInput source=\"gender\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <SelectInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <Select> component\n *\n * You can disable some choices by providing a `disableValue` field which name is `disabled` by default\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', disabled: true },\n * ];\n *\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', not_available: true },\n * ];\n * <SelectInput source=\"gender\" choices={choices} disableValue=\"not_available\" />\n *\n */\n\nvar SelectInput = function (props) {\n  var allowEmpty = props.allowEmpty,\n      _a = props.choices,\n      choices = _a === void 0 ? [] : _a,\n      classesOverride = props.classes,\n      className = props.className,\n      disableValue = props.disableValue,\n      emptyText = props.emptyText,\n      emptyValue = props.emptyValue,\n      format = props.format,\n      helperText = props.helperText,\n      label = props.label,\n      onBlur = props.onBlur,\n      onChange = props.onChange,\n      onFocus = props.onFocus,\n      options = props.options,\n      optionText = props.optionText,\n      optionValue = props.optionValue,\n      parse = props.parse,\n      resource = props.resource,\n      source = props.source,\n      translateChoice = props.translateChoice,\n      validate = props.validate,\n      rest = __rest(props, [\"allowEmpty\", \"choices\", \"classes\", \"className\", \"disableValue\", \"emptyText\", \"emptyValue\", \"format\", \"helperText\", \"label\", \"onBlur\", \"onChange\", \"onFocus\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"source\", \"translateChoice\", \"validate\"]);\n\n  var translate = useTranslate();\n  var classes = useStyles(props);\n  warning(source === undefined, \"If you're not wrapping the SelectInput inside a ReferenceInput, you must provide the source prop\");\n  warning(choices === undefined, \"If you're not wrapping the SelectInput inside a ReferenceInput, you must provide the choices prop\");\n\n  var _b = useChoices({\n    optionText: optionText,\n    optionValue: optionValue,\n    translateChoice: translateChoice\n  }),\n      getChoiceText = _b.getChoiceText,\n      getChoiceValue = _b.getChoiceValue;\n\n  var _c = useInput(__assign({\n    format: format,\n    onBlur: onBlur,\n    onChange: onChange,\n    onFocus: onFocus,\n    parse: parse,\n    resource: resource,\n    source: source,\n    validate: validate\n  }, rest)),\n      id = _c.id,\n      input = _c.input,\n      isRequired = _c.isRequired,\n      _d = _c.meta,\n      error = _d.error,\n      touched = _d.touched;\n\n  var renderEmptyItemOption = useCallback(function () {\n    return React.isValidElement(emptyText) ? React.cloneElement(emptyText) : emptyText === '' ? 'â€ƒ' // em space, forces the display of an empty line of normal height\n    : translate(emptyText, {\n      _: emptyText\n    });\n  }, [emptyText, translate]);\n  var renderMenuItemOption = useCallback(function (choice) {\n    return getChoiceText(choice);\n  }, [getChoiceText]);\n  return React.createElement(ResettableTextField, __assign({\n    id: id\n  }, input, {\n    select: true,\n    label: label !== '' && label !== false && React.createElement(FieldTitle, {\n      label: label,\n      source: source,\n      resource: resource,\n      isRequired: isRequired\n    }),\n    className: classes.input + \" \" + className,\n    clearAlwaysVisible: true,\n    error: !!(touched && error),\n    helperText: React.createElement(InputHelperText, {\n      touched: touched,\n      error: error,\n      helperText: helperText\n    })\n  }, options, sanitizeRestProps(rest)), allowEmpty ? React.createElement(MenuItem, {\n    value: emptyValue,\n    key: \"null\",\n    \"aria-label\": translate('ra.action.clear_input_value'),\n    title: translate('ra.action.clear_input_value')\n  }, renderEmptyItemOption()) : null, choices.map(function (choice) {\n    return React.createElement(MenuItem, {\n      key: getChoiceValue(choice),\n      value: getChoiceValue(choice),\n      disabled: get(choice, disableValue)\n    }, renderMenuItemOption(choice));\n  }));\n};\n\nSelectInput.propTypes = {\n  allowEmpty: PropTypes.bool,\n  emptyText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  emptyValue: PropTypes.any,\n  choices: PropTypes.arrayOf(PropTypes.object),\n  classes: PropTypes.object,\n  className: PropTypes.string,\n  label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  options: PropTypes.object,\n  optionText: PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.element]).isRequired,\n  optionValue: PropTypes.string.isRequired,\n  disableValue: PropTypes.string,\n  resettable: PropTypes.bool,\n  resource: PropTypes.string,\n  source: PropTypes.string,\n  translateChoice: PropTypes.bool\n};\nSelectInput.defaultProps = {\n  emptyText: '',\n  emptyValue: '',\n  options: {},\n  optionText: 'name',\n  optionValue: 'id',\n  translateChoice: true,\n  disableValue: 'disabled'\n};\nexport default SelectInput;","map":{"version":3,"sources":["F:/TTNM/admin3/node_modules/ra-ui-materialui/esm/input/SelectInput.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","React","useCallback","PropTypes","get","MenuItem","makeStyles","useInput","FieldTitle","useTranslate","useChoices","warning","ResettableTextField","InputHelperText","sanitizeInputRestProps","sanitizeRestProps","_a","addLabel","afterSubmit","allowNull","beforeSubmit","choices","className","crudGetMatching","crudGetOne","data","filter","filterToQuery","formatOnBlur","isEqual","limitChoicesToValue","multiple","name","pagination","perPage","ref","reference","render","setFilter","setPagination","setSort","sort","subscription","type","validateFields","validation","value","rest","useStyles","theme","input","minWidth","spacing","SelectInput","props","allowEmpty","classesOverride","classes","disableValue","emptyText","emptyValue","format","helperText","label","onBlur","onChange","onFocus","options","optionText","optionValue","parse","resource","source","translateChoice","validate","translate","undefined","_b","getChoiceText","getChoiceValue","_c","id","isRequired","_d","meta","error","touched","renderEmptyItemOption","isValidElement","cloneElement","_","renderMenuItemOption","choice","createElement","select","clearAlwaysVisible","key","title","map","disabled","propTypes","bool","oneOfType","string","element","any","arrayOf","object","func","resettable","defaultProps"],"mappings":"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","sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport * as React from 'react';\nimport { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useInput, FieldTitle, useTranslate, useChoices, warning, } from 'ra-core';\nimport ResettableTextField from './ResettableTextField';\nimport InputHelperText from './InputHelperText';\nimport sanitizeInputRestProps from './sanitizeInputRestProps';\nvar sanitizeRestProps = function (_a) {\n    var addLabel = _a.addLabel, afterSubmit = _a.afterSubmit, allowNull = _a.allowNull, beforeSubmit = _a.beforeSubmit, choices = _a.choices, className = _a.className, crudGetMatching = _a.crudGetMatching, crudGetOne = _a.crudGetOne, data = _a.data, filter = _a.filter, filterToQuery = _a.filterToQuery, formatOnBlur = _a.formatOnBlur, isEqual = _a.isEqual, limitChoicesToValue = _a.limitChoicesToValue, multiple = _a.multiple, name = _a.name, pagination = _a.pagination, perPage = _a.perPage, ref = _a.ref, reference = _a.reference, render = _a.render, setFilter = _a.setFilter, setPagination = _a.setPagination, setSort = _a.setSort, sort = _a.sort, subscription = _a.subscription, type = _a.type, validateFields = _a.validateFields, validation = _a.validation, value = _a.value, rest = __rest(_a, [\"addLabel\", \"afterSubmit\", \"allowNull\", \"beforeSubmit\", \"choices\", \"className\", \"crudGetMatching\", \"crudGetOne\", \"data\", \"filter\", \"filterToQuery\", \"formatOnBlur\", \"isEqual\", \"limitChoicesToValue\", \"multiple\", \"name\", \"pagination\", \"perPage\", \"ref\", \"reference\", \"render\", \"setFilter\", \"setPagination\", \"setSort\", \"sort\", \"subscription\", \"type\", \"validateFields\", \"validation\", \"value\"]);\n    return sanitizeInputRestProps(rest);\n};\nvar useStyles = makeStyles(function (theme) { return ({\n    input: {\n        minWidth: theme.spacing(20),\n    },\n}); }, { name: 'RaSelectInput' });\n/**\n * An Input component for a select box, using an array of objects for the options\n *\n * Pass possible options as an array of objects in the 'choices' attribute.\n *\n * By default, the options are built from:\n *  - the 'id' property as the option value,\n *  - the 'name' property as the option text\n * @example\n * const choices = [\n *    { id: 'M', name: 'Male' },\n *    { id: 'F', name: 'Female' },\n * ];\n * <SelectInput source=\"gender\" choices={choices} />\n *\n * You can also customize the properties to use for the option name and value,\n * thanks to the 'optionText' and 'optionValue' attributes.\n * @example\n * const choices = [\n *    { _id: 123, full_name: 'Leo Tolstoi', sex: 'M' },\n *    { _id: 456, full_name: 'Jane Austen', sex: 'F' },\n * ];\n * <SelectInput source=\"author_id\" choices={choices} optionText=\"full_name\" optionValue=\"_id\" />\n *\n * `optionText` also accepts a function, so you can shape the option text at will:\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const optionRenderer = choice => `${choice.first_name} ${choice.last_name}`;\n * <SelectInput source=\"author_id\" choices={choices} optionText={optionRenderer} />\n *\n * `optionText` also accepts a React Element, that will be cloned and receive\n * the related choice as the `record` prop. You can use Field components there.\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n * ];\n * const FullNameField = ({ record }) => <span>{record.first_name} {record.last_name}</span>;\n * <SelectInput source=\"gender\" choices={choices} optionText={<FullNameField />}/>\n *\n * The choices are translated by default, so you can use translation identifiers as choices:\n * @example\n * const choices = [\n *    { id: 'M', name: 'myroot.gender.male' },\n *    { id: 'F', name: 'myroot.gender.female' },\n * ];\n *\n * However, in some cases (e.g. inside a `<ReferenceInput>`), you may not want\n * the choice to be translated. In that case, set the `translateChoice` prop to false.\n * @example\n * <SelectInput source=\"gender\" choices={choices} translateChoice={false}/>\n *\n * The object passed as `options` props is passed to the material-ui <Select> component\n *\n * You can disable some choices by providing a `disableValue` field which name is `disabled` by default\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', disabled: true },\n * ];\n *\n * @example\n * const choices = [\n *    { id: 123, first_name: 'Leo', last_name: 'Tolstoi' },\n *    { id: 456, first_name: 'Jane', last_name: 'Austen' },\n *    { id: 976, first_name: 'William', last_name: 'Rinkerd', not_available: true },\n * ];\n * <SelectInput source=\"gender\" choices={choices} disableValue=\"not_available\" />\n *\n */\nvar SelectInput = function (props) {\n    var allowEmpty = props.allowEmpty, _a = props.choices, choices = _a === void 0 ? [] : _a, classesOverride = props.classes, className = props.className, disableValue = props.disableValue, emptyText = props.emptyText, emptyValue = props.emptyValue, format = props.format, helperText = props.helperText, label = props.label, onBlur = props.onBlur, onChange = props.onChange, onFocus = props.onFocus, options = props.options, optionText = props.optionText, optionValue = props.optionValue, parse = props.parse, resource = props.resource, source = props.source, translateChoice = props.translateChoice, validate = props.validate, rest = __rest(props, [\"allowEmpty\", \"choices\", \"classes\", \"className\", \"disableValue\", \"emptyText\", \"emptyValue\", \"format\", \"helperText\", \"label\", \"onBlur\", \"onChange\", \"onFocus\", \"options\", \"optionText\", \"optionValue\", \"parse\", \"resource\", \"source\", \"translateChoice\", \"validate\"]);\n    var translate = useTranslate();\n    var classes = useStyles(props);\n    warning(source === undefined, \"If you're not wrapping the SelectInput inside a ReferenceInput, you must provide the source prop\");\n    warning(choices === undefined, \"If you're not wrapping the SelectInput inside a ReferenceInput, you must provide the choices prop\");\n    var _b = useChoices({\n        optionText: optionText,\n        optionValue: optionValue,\n        translateChoice: translateChoice,\n    }), getChoiceText = _b.getChoiceText, getChoiceValue = _b.getChoiceValue;\n    var _c = useInput(__assign({ format: format,\n        onBlur: onBlur,\n        onChange: onChange,\n        onFocus: onFocus,\n        parse: parse,\n        resource: resource,\n        source: source,\n        validate: validate }, rest)), id = _c.id, input = _c.input, isRequired = _c.isRequired, _d = _c.meta, error = _d.error, touched = _d.touched;\n    var renderEmptyItemOption = useCallback(function () {\n        return React.isValidElement(emptyText)\n            ? React.cloneElement(emptyText)\n            : emptyText === ''\n                ? 'â€ƒ' // em space, forces the display of an empty line of normal height\n                : translate(emptyText, { _: emptyText });\n    }, [emptyText, translate]);\n    var renderMenuItemOption = useCallback(function (choice) { return getChoiceText(choice); }, [\n        getChoiceText,\n    ]);\n    return (React.createElement(ResettableTextField, __assign({ id: id }, input, { select: true, label: label !== '' &&\n            label !== false && (React.createElement(FieldTitle, { label: label, source: source, resource: resource, isRequired: isRequired })), className: classes.input + \" \" + className, clearAlwaysVisible: true, error: !!(touched && error), helperText: React.createElement(InputHelperText, { touched: touched, error: error, helperText: helperText }) }, options, sanitizeRestProps(rest)),\n        allowEmpty ? (React.createElement(MenuItem, { value: emptyValue, key: \"null\", \"aria-label\": translate('ra.action.clear_input_value'), title: translate('ra.action.clear_input_value') }, renderEmptyItemOption())) : null,\n        choices.map(function (choice) { return (React.createElement(MenuItem, { key: getChoiceValue(choice), value: getChoiceValue(choice), disabled: get(choice, disableValue) }, renderMenuItemOption(choice))); })));\n};\nSelectInput.propTypes = {\n    allowEmpty: PropTypes.bool,\n    emptyText: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n    emptyValue: PropTypes.any,\n    choices: PropTypes.arrayOf(PropTypes.object),\n    classes: PropTypes.object,\n    className: PropTypes.string,\n    label: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n    options: PropTypes.object,\n    optionText: PropTypes.oneOfType([\n        PropTypes.string,\n        PropTypes.func,\n        PropTypes.element,\n    ]).isRequired,\n    optionValue: PropTypes.string.isRequired,\n    disableValue: PropTypes.string,\n    resettable: PropTypes.bool,\n    resource: PropTypes.string,\n    source: PropTypes.string,\n    translateChoice: PropTypes.bool,\n};\nSelectInput.defaultProps = {\n    emptyText: '',\n    emptyValue: '',\n    options: {},\n    optionText: 'name',\n    optionValue: 'id',\n    translateChoice: true,\n    disableValue: 'disabled',\n};\nexport default SelectInput;\n"]},"metadata":{},"sourceType":"module"}