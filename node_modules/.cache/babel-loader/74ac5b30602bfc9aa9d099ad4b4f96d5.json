{"ast":null,"code":"import * as React from 'react';\nimport { RecordContextProvider, usePickRecordContext } from '../RecordContext';\nimport { CreateContext } from './CreateContext';\nimport { SaveContextProvider, usePickSaveContext } from './SaveContext';\n/**\n * Create a Create Context.\n *\n * @example\n *\n * const MyCreate = (props) => {\n *     const controllerProps = useCreateController(props);\n *     return (\n *         <CreateContextProvider value={controllerProps}>\n *             <MyCreateView>\n *         </CreateContextProvider>\n *     );\n * };\n *\n * const MyCreateView = () => {\n *     const { record } = useRecordContext();\n *     // or, to rerender only when the save operation change but not data\n *     const { saving } = useCreateContext();\n * }\n *\n * @see CreateContext\n * @see RecordContext\n */\n\nexport var CreateContextProvider = function CreateContextProvider(_a) {\n  var children = _a.children,\n      value = _a.value;\n  return React.createElement(CreateContext.Provider, {\n    value: value\n  }, React.createElement(SaveContextProvider, {\n    value: usePickSaveContext(value)\n  }, React.createElement(RecordContextProvider, {\n    value: usePickRecordContext(value)\n  }, children)));\n};","map":{"version":3,"sources":["F:/TTNM/admin3/node_modules/ra-core/esm/controller/details/CreateContextProvider.js"],"names":["React","RecordContextProvider","usePickRecordContext","CreateContext","SaveContextProvider","usePickSaveContext","CreateContextProvider","_a","children","value","createElement","Provider"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,qBAAT,EAAgCC,oBAAhC,QAA4D,kBAA5D;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,mBAAT,EAA8BC,kBAA9B,QAAwD,eAAxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,IAAIC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAUC,EAAV,EAAc;AAC7C,MAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAlB;AAAA,MAA4BC,KAAK,GAAGF,EAAE,CAACE,KAAvC;AACA,SAAQT,KAAK,CAACU,aAAN,CAAoBP,aAAa,CAACQ,QAAlC,EAA4C;AAAEF,IAAAA,KAAK,EAAEA;AAAT,GAA5C,EACJT,KAAK,CAACU,aAAN,CAAoBN,mBAApB,EAAyC;AAAEK,IAAAA,KAAK,EAAEJ,kBAAkB,CAACI,KAAD;AAA3B,GAAzC,EACIT,KAAK,CAACU,aAAN,CAAoBT,qBAApB,EAA2C;AAAEQ,IAAAA,KAAK,EAAEP,oBAAoB,CAACO,KAAD;AAA7B,GAA3C,EAAmFD,QAAnF,CADJ,CADI,CAAR;AAGH,CALM","sourcesContent":["import * as React from 'react';\nimport { RecordContextProvider, usePickRecordContext } from '../RecordContext';\nimport { CreateContext } from './CreateContext';\nimport { SaveContextProvider, usePickSaveContext } from './SaveContext';\n/**\n * Create a Create Context.\n *\n * @example\n *\n * const MyCreate = (props) => {\n *     const controllerProps = useCreateController(props);\n *     return (\n *         <CreateContextProvider value={controllerProps}>\n *             <MyCreateView>\n *         </CreateContextProvider>\n *     );\n * };\n *\n * const MyCreateView = () => {\n *     const { record } = useRecordContext();\n *     // or, to rerender only when the save operation change but not data\n *     const { saving } = useCreateContext();\n * }\n *\n * @see CreateContext\n * @see RecordContext\n */\nexport var CreateContextProvider = function (_a) {\n    var children = _a.children, value = _a.value;\n    return (React.createElement(CreateContext.Provider, { value: value },\n        React.createElement(SaveContextProvider, { value: usePickSaveContext(value) },\n            React.createElement(RecordContextProvider, { value: usePickRecordContext(value) }, children))));\n};\n"]},"metadata":{},"sourceType":"module"}