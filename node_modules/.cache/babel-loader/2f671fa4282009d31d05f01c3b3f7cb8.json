{"ast":null,"code":"import { useEffect } from 'react';\nimport { useForm } from 'react-final-form';\nimport merge from 'lodash/merge';\n/**\n * Restore the record values which should override any default values specified on the form.\n */\n\nvar useInitializeFormWithRecord = function (record) {\n  var form = useForm();\n  useEffect(function () {\n    if (!record) {\n      return;\n    }\n\n    var initialValues = form.getState().initialValues;\n    var initialValuesMergedWithRecord = merge({}, initialValues, record); // Disable this option when re-initializing the form because in this case, it should reset the dirty state of all fields\n    // We do need to keep this option for dynamically added inputs though which is why it is kept at the form level\n\n    form.setConfig('keepDirtyOnReinitialize', false); // Ignored until next version of final-form is released. See https://github.com/final-form/final-form/pull/376\n    // @ts-ignore\n\n    form.restart(initialValuesMergedWithRecord);\n    form.setConfig('keepDirtyOnReinitialize', true);\n  }, [form, JSON.stringify(record)]); // eslint-disable-line react-hooks/exhaustive-deps\n};\n\nexport default useInitializeFormWithRecord;","map":{"version":3,"sources":["F:/TTNM/admin3/node_modules/ra-core/esm/form/useInitializeFormWithRecord.js"],"names":["useEffect","useForm","merge","useInitializeFormWithRecord","record","form","initialValues","getState","initialValuesMergedWithRecord","setConfig","restart","JSON","stringify"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,OAAT,QAAwB,kBAAxB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA;AACA;AACA;;AACA,IAAIC,2BAA2B,GAAG,UAAUC,MAAV,EAAkB;AAChD,MAAIC,IAAI,GAAGJ,OAAO,EAAlB;AACAD,EAAAA,SAAS,CAAC,YAAY;AAClB,QAAI,CAACI,MAAL,EAAa;AACT;AACH;;AACD,QAAIE,aAAa,GAAGD,IAAI,CAACE,QAAL,GAAgBD,aAApC;AACA,QAAIE,6BAA6B,GAAGN,KAAK,CAAC,EAAD,EAAKI,aAAL,EAAoBF,MAApB,CAAzC,CALkB,CAMlB;AACA;;AACAC,IAAAA,IAAI,CAACI,SAAL,CAAe,yBAAf,EAA0C,KAA1C,EARkB,CASlB;AACA;;AACAJ,IAAAA,IAAI,CAACK,OAAL,CAAaF,6BAAb;AACAH,IAAAA,IAAI,CAACI,SAAL,CAAe,yBAAf,EAA0C,IAA1C;AACH,GAbQ,EAaN,CAACJ,IAAD,EAAOM,IAAI,CAACC,SAAL,CAAeR,MAAf,CAAP,CAbM,CAAT,CAFgD,CAeZ;AACvC,CAhBD;;AAiBA,eAAeD,2BAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useForm } from 'react-final-form';\nimport merge from 'lodash/merge';\n/**\n * Restore the record values which should override any default values specified on the form.\n */\nvar useInitializeFormWithRecord = function (record) {\n    var form = useForm();\n    useEffect(function () {\n        if (!record) {\n            return;\n        }\n        var initialValues = form.getState().initialValues;\n        var initialValuesMergedWithRecord = merge({}, initialValues, record);\n        // Disable this option when re-initializing the form because in this case, it should reset the dirty state of all fields\n        // We do need to keep this option for dynamically added inputs though which is why it is kept at the form level\n        form.setConfig('keepDirtyOnReinitialize', false);\n        // Ignored until next version of final-form is released. See https://github.com/final-form/final-form/pull/376\n        // @ts-ignore\n        form.restart(initialValuesMergedWithRecord);\n        form.setConfig('keepDirtyOnReinitialize', true);\n    }, [form, JSON.stringify(record)]); // eslint-disable-line react-hooks/exhaustive-deps\n};\nexport default useInitializeFormWithRecord;\n"]},"metadata":{},"sourceType":"module"}