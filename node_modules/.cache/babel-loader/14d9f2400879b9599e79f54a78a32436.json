{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"F:\\\\TTNM\\\\admin3\\\\src\\\\products.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { List, Datagrid, TextField, ReferenceField, EditButton, Edit, SimpleForm, ReferenceInput, SelectInput, TextInput, Create, Filter, SimpleList, EmailField, ImageField, ImageInput } from 'react-admin';\nimport { useMediaQuery } from '@material-ui/core';\n\nconst ProductsTitle = ({\n  record\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"Products  \", record ? `\"${record.title}\"` : \"\", \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 12\n  }, this);\n};\n\n_c = ProductsTitle;\n\nconst ProductsFilter = props => /*#__PURE__*/_jsxDEV(Filter, { ...props,\n  children: [/*#__PURE__*/_jsxDEV(TextInput, {\n    label: \"Search\",\n    source: \"q\",\n    alwayOn: true\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this), /*#__PURE__*/_jsxDEV(ReferenceInput, {\n    label: \"Products\",\n    source: \"productsId\",\n    reference: \"products\",\n    allowEmpty: true,\n    children: /*#__PURE__*/_jsxDEV(SelectInput, {\n      optionText: \"products\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 28,\n  columnNumber: 5\n}, this);\n\n_c2 = ProductsFilter;\nexport const ProductsList = props => {\n  _s();\n\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\n  return /*#__PURE__*/_jsxDEV(List, {\n    filters: /*#__PURE__*/_jsxDEV(ProductsFilter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 24\n    }, this),\n    ...props,\n    children: isSmall ? /*#__PURE__*/_jsxDEV(SimpleList, {\n      primaryText: record => record.title,\n      primaryText: record => `${record.views} views`,\n      tertiaryText: record => new Date(record.published_at).toLocaleString()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Datagrid, {\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        source: \"id\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ReferenceField, {\n        source: \"id\",\n        reference: \"products\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          source: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        source: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        source: \"price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        source: \"title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        source: \"description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ImageField, {\n        source: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(EditButton, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProductsList, \"+XqJ9UG1ndrE6RgM1+kla/ovLjc=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c3 = ProductsList;\n\nconst PreviewImage = ({\n  record,\n  source\n}) => {\n  if (typeof record == \"string\") {\n    record = {\n      [source]: record\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(ImageField, {\n    record: record,\n    source: source\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 12\n  }, this);\n};\n\n_c4 = PreviewImage;\nexport const ProductsEdit = props => /*#__PURE__*/_jsxDEV(Edit, {\n  title: /*#__PURE__*/_jsxDEV(ProductsTitle, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 18\n  }, this),\n  ...props,\n  children: /*#__PURE__*/_jsxDEV(SimpleForm, {\n    children: [/*#__PURE__*/_jsxDEV(TextInput, {\n      disabled: true,\n      source: \"id\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReferenceInput, {\n      source: \"userId\",\n      reference: \"products\",\n      children: /*#__PURE__*/_jsxDEV(SelectInput, {\n        optionText: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      source: \"price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      source: \"title\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n      source: \"description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImageInput, {\n      source: \"img\",\n      accept: \"image/*\",\n      multiple: false,\n      children: /*#__PURE__*/_jsxDEV(ImageField, {\n        source: \"img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 74,\n  columnNumber: 5\n}, this);\n_c5 = ProductsEdit;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"ProductsTitle\");\n$RefreshReg$(_c2, \"ProductsFilter\");\n$RefreshReg$(_c3, \"ProductsList\");\n$RefreshReg$(_c4, \"PreviewImage\");\n$RefreshReg$(_c5, \"ProductsEdit\");","map":{"version":3,"sources":["F:/TTNM/admin3/src/products.js"],"names":["React","List","Datagrid","TextField","ReferenceField","EditButton","Edit","SimpleForm","ReferenceInput","SelectInput","TextInput","Create","Filter","SimpleList","EmailField","ImageField","ImageInput","useMediaQuery","ProductsTitle","record","title","ProductsFilter","props","ProductsList","isSmall","theme","breakpoints","down","views","Date","published_at","toLocaleString","PreviewImage","source","ProductsEdit"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport {\r\n    List, \r\n    Datagrid, \r\n    TextField, \r\n    ReferenceField, \r\n    EditButton,\r\n    Edit,\r\n    SimpleForm,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    TextInput,\r\n    Create,\r\n    Filter,\r\n    SimpleList, EmailField,\r\n    ImageField,\r\n    ImageInput\r\n} \r\nfrom 'react-admin'\r\n\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\nconst ProductsTitle = ({record}) => {\r\n    return <span>Products  {record ? `\"${record.title}\"` : \"\"} </span>;\r\n}\r\n\r\nconst ProductsFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwayOn />\r\n        <ReferenceInput label=\"Products\" source=\"productsId\" reference=\"products\" allowEmpty>\r\n            <SelectInput optionText=\"products\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n)\r\n\r\nexport const ProductsList = props => {\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    return(\r\n        <List filters={<ProductsFilter />} {...props}>\r\n            {isSmall ? (\r\n                <SimpleList \r\n                    primaryText={record => record.title}\r\n                    primaryText={record => `${record.views} views`}\r\n                    tertiaryText={record => new Date(record.published_at).toLocaleString()}\r\n                />\r\n            ): (\r\n                <Datagrid>\r\n                    <TextField source=\"id\" />\r\n                    <ReferenceField source=\"id\" reference=\"products\">\r\n                        <TextField source=\"name\" />\r\n                    </ReferenceField>\r\n                    <TextField source=\"name\" />\r\n                    <TextField source=\"price\" />\r\n                    <TextField source=\"title\" />\r\n                    <TextField source=\"description\" />\r\n                    <ImageField source=\"img\" />\r\n                    <EditButton />\r\n                </Datagrid>\r\n            )}\r\n        </List>\r\n    )\r\n}\r\n\r\nconst PreviewImage = ({record, source}) => {\r\n    if(typeof (record) == \"string\"){\r\n        record = {\r\n            [source]: record\r\n        }\r\n    }\r\n    return <ImageField record={record} source={source}/>\r\n}\r\n\r\nexport const ProductsEdit = props => (\r\n    <Edit title={<ProductsTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <ReferenceInput source=\"userId\" reference=\"products\"> \r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"description\" />\r\n            <ImageInput source=\"img\"  accept=\"image/*\" multiple={false} >\r\n                <ImageField source=\"img\" />\r\n            </ImageInput>\r\n        </SimpleForm>     \r\n    </Edit>\r\n);"]},"metadata":{},"sourceType":"module"}