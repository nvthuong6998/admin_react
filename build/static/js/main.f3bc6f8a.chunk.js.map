{"version":3,"sources":["MyUrlField.js","users.js","posts.js","type.js","Iphone.js","Ipad.js","mac.js","tv.js","management-oder.js","dashboard.js","authProvider.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","link","textDecoration","icon","width","paddingLeft","MyUrlField","record","source","classes","href","className","UserList","props","List","Datagrid","rowClick","TextField","EmailField","UserCreate","Create","SimpleForm","ReferenceInput","reference","TextInput","PostTitle","title","PostFilter","Filter","label","alwaysOn","allowEmpty","SelectInput","optionText","PostList","isSmall","useMediaQuery","theme","breakpoints","down","filters","SimpleList","primaryText","secondaryText","views","tertiaryText","Date","published_at","toLocaleDateString","ReferenceField","EditButton","PostEdit","Edit","disabled","multiline","PostCreate","TypeList","IphoneTitle","IphoneFilter","IphoneList","ImageField","IphoneEdit","ImageInput","accept","multiple","IphoneCreate","IpadTitle","IpadFilter","IpadList","IpadEdit","IpadCreate","MacTitle","MacFilter","MacList","MacEdit","MacCreate","TVTitle","TVFilter","TVList","TVEdit","TVCreate","ManagementTitle","ManagementFilter","ManagementList","ManagementEdit","ManagementCreate","Card","CardHeader","st","style","textAlign","src","CardContent","login","username","localStorage","setItem","Promise","resolve","logout","removeItem","checkError","status","reject","checkAuth","getItem","getPermissions","dataProvider","jsonServerProvider","App","Admin","dashboard","authProvider","Resource","name","list","create","UserIcon","edit","PostIcon","PhoneIphoneIcon","TabletMacIcon","LaptopMacIcon","TvIcon","SupervisorAccountIcon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f3bc6f8a.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport {makeStyles} from '@material-ui/core/styles'\r\nimport LaunchIcon from '@material-ui/icons/Launch'\r\n\r\nconst useStyles = makeStyles({\r\n    link:{\r\n        textDecoration: 'none'\r\n    },\r\n    icon:{\r\n        width: '0.5em',\r\n        paddingLeft: 2,\r\n    }\r\n})\r\n\r\nconst MyUrlField = ({record = {}, source }) => {\r\n\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <a href={record[source]} className={classes.link} >\r\n            {record[source]}\r\n            <LaunchIcon className={classes.icon} />\r\n        </a>\r\n    );\r\n}\r\n\r\n    \r\n\r\nexport default MyUrlField;","import * as React from 'react'\r\nimport {\r\n    List, \r\n    Datagrid, \r\n    TextField, \r\n    EmailField, \r\n    UrlField,\r\n    Create,\r\n    SimpleForm,\r\n    ReferenceInput, TextInput,\r\n} from 'react-admin'\r\nimport MyUrlField from './MyUrlField'\r\n\r\nexport const UserList = props => (\r\n    <List {...props}>\r\n        <Datagrid rowClick=\"edit\">\r\n            <TextField source=\"id\" />\r\n            <TextField source=\"name\" />\r\n            <EmailField source=\"email\" />\r\n            <TextField source=\"address.street\" />\r\n            <TextField source=\"phone\" />\r\n            <MyUrlField source=\"website\" />\r\n            <TextField source=\"company.name\" />\r\n        </Datagrid>\r\n    </List>\r\n);\r\n\r\nexport const UserCreate = props => (\r\n    <Create {...props}>\r\n        <SimpleForm>\r\n            <ReferenceInput source=\"id\" reference=\"users\">\r\n                <TextInput source=\"name\" />\r\n            </ReferenceInput>\r\n                <TextInput source=\"name\" />\r\n                <TextInput source=\"email\" />\r\n                <TextInput source=\"address.street\" />\r\n                <TextInput source=\"phone\" />\r\n                <TextInput source=\"website\" />\r\n                <TextInput source=\"company.name\" />\r\n        </SimpleForm>\r\n    </Create>\r\n)","import * as React from 'react'\r\nimport {\r\n    List, \r\n    Datagrid, \r\n    TextField, \r\n    ReferenceField, \r\n    EditButton,\r\n    Edit,\r\n    SimpleForm,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    TextInput,\r\n    Create,\r\n    Filter,\r\n    SimpleList\r\n} from 'react-admin'\r\n\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\nconst PostTitle = ({record}) => {\r\n    return <span>Post {record ? `\"${record.title}\"`: \"\" }</span>;\r\n}\r\n\r\nconst PostFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\r\n            <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\n\r\nexport const PostList = props => {\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    return(\r\n        <List filters={<PostFilter />} {...props}>\r\n            {\r\n                isSmall ? (\r\n                    <SimpleList \r\n                        primaryText={record => record.title}\r\n                        secondaryText={record => `${record.views} views`}\r\n                        tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\r\n                    />\r\n                ) : (\r\n                    <Datagrid>\r\n                        \r\n\r\n                        <ReferenceField source=\"name\" reference=\"users\">\r\n                            <TextField source=\"name\" />\r\n                        </ReferenceField>\r\n                        <TextField source=\"author\" />\r\n                        <TextField source=\"title\" />\r\n                        <TextField source=\"body\" />\r\n                        <EditButton />\r\n                    </Datagrid>\r\n                )\r\n            }\r\n\r\n        </List>\r\n    );\r\n}\r\n\r\nexport const PostEdit = props => (\r\n    <Edit title={<PostTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <ReferenceInput source=\"id\" reference=\"users\">\r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"title\" />\r\n            <TextInput multiline source=\"body\" />\r\n        </SimpleForm>\r\n    </Edit>\r\n);\r\n\r\nexport const PostCreate = props => (\r\n    <Create {...props}> \r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <ReferenceInput source=\"name\" reference=\"users\">\r\n                <SelectInput source=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"author\" />\r\n            <TextInput multiline source=\"body\" />\r\n        </SimpleForm>\r\n    </Create>\r\n)","import * as React from 'react'\r\nimport {\r\n    List, \r\n    Datagrid, \r\n    TextField, \r\n    EmailField, \r\n    UrlField,\r\n    Create,\r\n    SimpleForm,\r\n    ReferenceInput, TextInput,\r\n} from 'react-admin'\r\n\r\nexport const TypeList = props => {\r\n    return(\r\n        <List {...props}>\r\n            <Datagrid>\r\n                <TextField source=\"id\" />\r\n                <TextField source=\"name\" />\r\n            </Datagrid>\r\n        </List>\r\n    );\r\n}\r\n    ","import * as React from 'react'\r\nimport {\r\n    List, \r\n    Datagrid, \r\n    TextField, \r\n    ReferenceField, \r\n    EditButton,\r\n    Edit,\r\n    SimpleForm,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    TextInput,\r\n    Create,\r\n    Filter,\r\n    SimpleList, ImageField, ImageInput\r\n} from 'react-admin'\r\n\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\n\r\nconst IphoneTitle = ({record}) => {\r\n    return <span>Iphone  {record ? `\"${record.title}\"` : \"\"} </span>;\r\n}\r\n\r\nconst IphoneFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"Iphone\" source=\"id\" reference=\"iphone\" allowEmpty>\r\n            <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\n\r\nexport const IphoneList = props => {\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    return(\r\n        <List filters={<IphoneFilter />} {...props}>\r\n            {\r\n                isSmall ? (\r\n                    <SimpleList \r\n                        primaryText={record => record.title}\r\n                        secondaryText={record => `${record.views} views`}\r\n                        tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\r\n                    />\r\n                ) : (\r\n                    <Datagrid>\r\n                        <TextField source=\"id\" />\r\n                        <TextField source=\"name\" />\r\n                        <TextField source=\"price\" />\r\n                        <TextField source=\"title\" />\r\n                        <TextField source=\"description\" />\r\n                        <ImageField source=\"img\" />\r\n                        <EditButton />\r\n                    </Datagrid>\r\n                )\r\n            }\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport const IphoneEdit = props => (\r\n    <Edit title={<IphoneTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <ReferenceInput source=\"id\" reference=\"type\"> \r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"description\" />\r\n            <ImageInput source=\"img\"  accept=\"image/*\" multiple={false} >\r\n                <ImageField source=\"img\" />\r\n            </ImageInput>\r\n        </SimpleForm>     \r\n    </Edit>\r\n);\r\n\r\nexport const IphoneCreate = props => (\r\n    <Create {...props}> \r\n        <SimpleForm>\r\n            <TextInput source=\"id\" />            \r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput multiline source=\"description\" />\r\n            <ImageInput source=\"img\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);","import * as React from 'react'\r\nimport {\r\n    List, \r\n    Datagrid, \r\n    TextField, \r\n    ReferenceField, \r\n    EditButton,\r\n    Edit,\r\n    SimpleForm,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    TextInput,\r\n    Create,\r\n    Filter,\r\n    SimpleList, ImageField, ImageInput\r\n} from 'react-admin'\r\n\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\n\r\nconst IpadTitle = ({record}) => {\r\n    return <span>Iphone  {record ? `\"${record.title}\"` : \"\"} </span>;\r\n}\r\n\r\nconst IpadFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"Iphone\" source=\"id\" reference=\"iphone\" allowEmpty>\r\n            <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\n\r\nexport const IpadList = props => {\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    return(\r\n        <List filters={<IpadFilter />} {...props}>\r\n            {\r\n                isSmall ? (\r\n                    <SimpleList \r\n                        primaryText={record => record.title}\r\n                        secondaryText={record => `${record.views} views`}\r\n                        tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\r\n                    />\r\n                ) : (\r\n                    <Datagrid>\r\n                        <TextField source=\"id\" />\r\n                        <TextField source=\"name\" />\r\n                        <TextField source=\"price\" />\r\n                        <TextField source=\"title\" />\r\n                        <TextField source=\"description\" />\r\n                        <ImageField source=\"img\" />\r\n                        <EditButton />\r\n                    </Datagrid>\r\n                )\r\n            }\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport const IpadEdit = props => (\r\n    <Edit title={<IpadTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <ReferenceInput source=\"id\" reference=\"type\"> \r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"description\" />\r\n            <ImageInput source=\"img\"  accept=\"image/*\" multiple={false} >\r\n                <ImageField source=\"img\" />\r\n            </ImageInput>\r\n        </SimpleForm>     \r\n    </Edit>\r\n);\r\n\r\nexport const IpadCreate = props => (\r\n    <Create {...props}> \r\n        <SimpleForm>\r\n            <TextInput source=\"id\" />            \r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput multiline source=\"description\" />\r\n            <ImageInput source=\"img\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);","import * as React from 'react'\r\nimport {\r\n    List, \r\n    Datagrid, \r\n    TextField, \r\n    ReferenceField, \r\n    EditButton,\r\n    Edit,\r\n    SimpleForm,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    TextInput,\r\n    Create,\r\n    Filter,\r\n    SimpleList, ImageField, ImageInput\r\n} from 'react-admin'\r\n\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\n\r\nconst MacTitle = ({record}) => {\r\n    return <span>Mac  {record ? `\"${record.title}\"` : \"\"} </span>;\r\n}\r\n\r\nconst MacFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"Mac\" source=\"id\" reference=\"mac\" allowEmpty>\r\n            <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\n\r\nexport const MacList = props => {\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    return(\r\n        <List filters={<MacFilter />} {...props}>\r\n            {\r\n                isSmall ? (\r\n                    <SimpleList \r\n                        primaryText={record => record.title}\r\n                        secondaryText={record => `${record.views} views`}\r\n                        tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\r\n                    />\r\n                ) : (\r\n                    <Datagrid>\r\n                        <TextField source=\"id\" />\r\n                        <TextField source=\"name\" />\r\n                        <TextField source=\"price\" />\r\n                        <TextField source=\"title\" />\r\n                        <TextField source=\"description\" />\r\n                        <ImageField source=\"img\" />\r\n                        <EditButton />\r\n                    </Datagrid>\r\n                )\r\n            }\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport const MacEdit = props => (\r\n    <Edit title={<MacTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <ReferenceInput source=\"id\" reference=\"type\"> \r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"description\" />\r\n            <ImageInput source=\"img\"  accept=\"image/*\" multiple >\r\n                <ImageField source=\"img\" />\r\n            </ImageInput>\r\n        </SimpleForm>     \r\n    </Edit>\r\n);\r\n\r\nexport const MacCreate = props => (\r\n    <Create {...props}> \r\n        <SimpleForm>\r\n            <TextInput source=\"id\" />            \r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput multiline multiline source=\"description\" />\r\n            <ImageInput source=\"img\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);","import * as React from 'react'\r\nimport {\r\n    List, \r\n    Datagrid, \r\n    TextField, \r\n    ReferenceField, \r\n    EditButton,\r\n    Edit,\r\n    SimpleForm,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    TextInput,\r\n    Create,\r\n    Filter,\r\n    SimpleList, ImageField, ImageInput\r\n} from 'react-admin'\r\n\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\n\r\nconst TVTitle = ({record}) => {\r\n    return <span>Mac  {record ? `\"${record.title}\"` : \"\"} </span>;\r\n}\r\n\r\nconst TVFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"TV\" source=\"id\" reference=\"tv\" allowEmpty>\r\n            <SelectInput optionText=\"name\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\n\r\nexport const TVList = props => {\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    return(\r\n        <List filters={<TVFilter />} {...props}>\r\n            {\r\n                isSmall ? (\r\n                    <SimpleList \r\n                        primaryText={record => record.title}\r\n                        secondaryText={record => `${record.views} views`}\r\n                        tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\r\n                    />\r\n                ) : (\r\n                    <Datagrid>\r\n                        <TextField source=\"id\" />\r\n                        <TextField source=\"name\" />\r\n                        <TextField source=\"price\" />\r\n                        <TextField source=\"title\" />\r\n                        <TextField source=\"description\" />\r\n                        <ImageField source=\"img\" />\r\n                        <EditButton />\r\n                    </Datagrid>\r\n                )\r\n            }\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport const TVEdit = props => (\r\n    <Edit title={<TVTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <ReferenceInput source=\"id\" reference=\"type\"> \r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput source=\"description\" />\r\n            <ImageInput source=\"img\"  accept=\"image/*\" multiple={false} >\r\n                <ImageField source=\"img\" />\r\n            </ImageInput>\r\n        </SimpleForm>     \r\n    </Edit>\r\n);\r\n\r\nexport const TVCreate = props => (\r\n    <Create {...props}> \r\n        <SimpleForm>\r\n            <TextInput source=\"id\" />            \r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"title\" />\r\n            <TextInput multiline source=\"description\" />\r\n            <ImageInput source=\"img\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);","import * as React from 'react'\r\nimport {\r\n    List, \r\n    Datagrid, \r\n    TextField, \r\n    ReferenceField, \r\n    EditButton,\r\n    Edit,\r\n    SimpleForm,\r\n    ReferenceInput,\r\n    SelectInput,\r\n    TextInput,\r\n    Create,\r\n    Filter,\r\n    SimpleList, ImageField, ImageInput\r\n} from 'react-admin'\r\n\r\nimport {useMediaQuery} from '@material-ui/core'\r\n\r\n\r\nconst ManagementTitle = ({record}) => {\r\n    return <span>Mac  {record ? `\"${record.title}\"` : \"\"} </span>;\r\n}\r\n\r\nconst ManagementFilter = (props) => (\r\n    <Filter {...props}>\r\n        <TextInput label=\"Search\" source=\"q\" alwaysOn />\r\n        <ReferenceInput label=\"Management Orders\" source=\"id\" reference=\"management-order\" allowEmpty>\r\n            <SelectInput optionText=\"product\" />\r\n        </ReferenceInput>\r\n    </Filter>\r\n);\r\n\r\nexport const ManagementList = props => {\r\n    const isSmall = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n    return(\r\n        <List filters={<ManagementFilter />} {...props}>\r\n            {\r\n                isSmall ? (\r\n                    <SimpleList \r\n                        primaryText={record => record.title}\r\n                        secondaryText={record => `${record.views} views`}\r\n                        tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\r\n                    />\r\n                ) : (\r\n                    <Datagrid>\r\n                        <TextField source=\"id\" />\r\n                        <TextField source=\"product\" />\r\n                        <TextField source=\"price\" />\r\n                        <TextField source=\"name\" />\r\n                        <TextField source=\"phone\" />\r\n                        <TextField source=\"address\" />\r\n                        <EditButton />\r\n                    </Datagrid>\r\n                )\r\n            }\r\n\r\n        </List>\r\n    )\r\n}\r\n\r\nexport const ManagementEdit = props => (\r\n    <Edit title={<ManagementTitle />} {...props}>\r\n        <SimpleForm>\r\n            <TextInput disabled source=\"id\" />\r\n            <ReferenceInput source=\"id\" reference=\"type\"> \r\n                <SelectInput optionText=\"name\" />\r\n            </ReferenceInput>\r\n            <TextInput source=\"product\" />\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"phone\" />\r\n            <TextInput source=\"address\" />\r\n        </SimpleForm>     \r\n    </Edit>\r\n);\r\n\r\nexport const ManagementCreate = props => (\r\n    <Create {...props}> \r\n        <SimpleForm>\r\n            <TextInput source=\"id\" />            \r\n            <TextInput source=\"product\" />\r\n            <TextInput source=\"price\" />\r\n            <TextInput source=\"name\" />\r\n            <TextInput source=\"phone\" />\r\n            <TextInput source=\"address\" />\r\n        </SimpleForm>\r\n    </Create>\r\n);","import * as React from 'react'\r\nimport {Card, CardContent, CardHeader, CardMedia } from '@material-ui/core'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\nexport default () => (\r\n    <Card>\r\n        \r\n       \r\n        <CardHeader st title=\"ADMIN BT-STORE\" />\r\n        <img style={{textAlign: 'center'}} className=\"img\" src=\"https://icons.iconarchive.com/icons/aha-soft/free-large-boss/256/Admin-icon.png\" />\r\n        <CardContent>lorem ipsum dolor sit amet, consectetur adip</CardContent>\r\n\r\n\r\n    </Card>\r\n)","export default {\r\n    login: ({username}) => {\r\n        localStorage.setItem('username', username);\r\n        return Promise.resolve();\r\n    },\r\n\r\n    logout: () => {\r\n        localStorage.removeItem('username');\r\n        return Promise.resolve();\r\n    },\r\n\r\n    checkError: ({status}) => {\r\n        if(status === 401 || status === 403){\r\n            localStorage.removeItem('username');\r\n            return Promise.reject();\r\n        }\r\n        return Promise.resolve();\r\n    },\r\n\r\n    checkAuth: () => {\r\n        return localStorage.getItem('username') ? Promise.resolve() : Promise.reject();\r\n    },\r\n\r\n    // called when the user navigates to a new location, to check for permissions /roles\r\n    getPermissions: () => Promise.resolve()\r\n}","import * as React from 'react'\nimport {Admin, Resource, ListGuesser, EditGuesser} from 'react-admin'\nimport jsonServerProvider from 'ra-data-json-server'\n\nimport {UserList, UserCreate} from './users'\nimport {PostList, PostEdit, PostCreate} from './posts'\nimport {ProductsList, ProductsEdit} from './products'\nimport {TypeList} from './type'\nimport {IphoneList, IphoneEdit, IphoneCreate} from './Iphone'\nimport {IpadList, IpadEdit, IpadCreate} from './Ipad'\nimport {MacList, MacEdit, MacCreate} from './mac'\nimport {TVList, TVEdit, TVCreate} from './tv'\nimport {ManagementList, ManagementEdit, ManagementCreate} from './management-oder'\n\n\nimport dashboard from './dashboard'\nimport authProvider from './authProvider'\n\nimport PostIcon from '@material-ui/icons/Book'\nimport UserIcon from '@material-ui/icons/Group'\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\nimport TvIcon from '@material-ui/icons/Tv';\nimport PhoneIphoneIcon from '@material-ui/icons/PhoneIphone';\nimport LaptopMacIcon from '@material-ui/icons/LaptopMac';\nimport TabletMacIcon from '@material-ui/icons/TabletMac';\n\n\nconst dataProvider = jsonServerProvider('http://localhost:5000');\n\nconst App = () => (\n  <Admin dashboard={dashboard} authProvider={authProvider} dataProvider={dataProvider}>\n      <Resource name=\"users\" list={UserList} create={UserCreate} icon={UserIcon} />\n      <Resource name=\"posts\" list={PostList} edit={PostEdit} create={PostCreate} icon={PostIcon} />\n      {/* <Resource name=\"products\" list={ProductsList} edit={ProductsEdit}  /> */}\n      <Resource name=\"type\" list={TypeList} />\n      <Resource name=\"iphone\" list={IphoneList} edit={IphoneEdit} create={IphoneCreate} icon={PhoneIphoneIcon} />\n      <Resource name=\"ipad\" list={IpadList} edit={IpadEdit} create={IpadCreate} icon={TabletMacIcon} />\n      <Resource name=\"mac\" list={MacList} edit={MacEdit} create={MacCreate} icon={LaptopMacIcon} />\n      <Resource name=\"tv\" list={TVList} edit={TVEdit} create={TVCreate} icon={TvIcon} />\n      <Resource name=\"management-order\" list={ManagementList} edit={ManagementEdit}  create={ManagementCreate} icon={SupervisorAccountIcon} />\n  </Admin>\n);\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}